// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableRailroadStation.h"
#include "FGTrainPlatformConnection.h"
#include "Components/SceneComponent.h"

AFGBuildableRailroadStation::AFGBuildableRailroadStation(){ 
	this->mShouldTeleportHere = false;
	this->mStationIdentifier = nullptr;
	this->mCurrentDockedWithRuleSet.DockingDefinition = ETrainDockingDefinition::TDD_LoadUnloadOnce;
	this->mCurrentDockedWithRuleSet.DockForDuration = 15.0;
	this->mCurrentDockedWithRuleSet.IsDurationAndRule = false;
	this->mDockingLocomotive = nullptr;
	this->mCurrentDockForDuration = 0.0;
	this->mActorRepresentationTexture = nullptr;
	this->mPlatformConnections.Add(CreateDefaultSubobject<UFGTrainPlatformConnection>(TEXT("PlatformConnection0")));
	this->mPlatformConnections.Add(CreateDefaultSubobject<UFGTrainPlatformConnection>(TEXT("PlatformConnection1")));
	this->mPlatformConnection0 = CreateDefaultSubobject<UFGTrainPlatformConnection>(TEXT("PlatformConnection0"));
	this->mPlatformConnection1 = CreateDefaultSubobject<UFGTrainPlatformConnection>(TEXT("PlatformConnection1"));
	this->RootComponent = CreateDefaultSubobject<USceneComponent>(TEXT("RootComponent"));
	this->mPlatformConnections[0]->SetupAttachment(RootComponent);
	this->mPlatformConnections[1]->SetupAttachment(RootComponent);
	this->mPlatformConnection0->SetupAttachment(RootComponent);
	this->mPlatformConnection1->SetupAttachment(RootComponent);
}
void AFGBuildableRailroadStation::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGBuildableRailroadStation::BeginPlay(){ }
void AFGBuildableRailroadStation::Destroyed(){ }
void AFGBuildableRailroadStation::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
bool AFGBuildableRailroadStation::CanDismantle_Implementation() const{ return bool(); }
void AFGBuildableRailroadStation::Factory_Tick(float dt){ }
bool AFGBuildableRailroadStation::CanProduce_Implementation() const{ return bool(); }
UFGTrainPlatformConnection* AFGBuildableRailroadStation::GetStationOutputConnection(){ return nullptr; }
bool AFGBuildableRailroadStation::CanDock( AFGLocomotive* locomotive){ return bool(); }
bool AFGBuildableRailroadStation::StartDocking( AFGLocomotive* locomotive, float offset){ return bool(); }
void AFGBuildableRailroadStation::NotifyPlatformDockingComplete( AFGBuildableTrainPlatform* completedPlatform){ }
void AFGBuildableRailroadStation::CancelDockingSequence(){ }
void AFGBuildableRailroadStation::SetupRailroadTrack(){ }
bool AFGBuildableRailroadStation::DockVehiclesToPlatforms( AFGLocomotive* locomotive){ return bool(); }
void AFGBuildableRailroadStation::FinishDockingSequence(){ }
