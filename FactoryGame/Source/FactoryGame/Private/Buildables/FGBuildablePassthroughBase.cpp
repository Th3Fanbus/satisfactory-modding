// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildablePassthroughBase.h"
#include "Components/SceneComponent.h"
#include "FGClearanceComponent.h"
#include "Net/UnrealNetwork.h"

AFGBuildablePassthroughBase::AFGBuildablePassthroughBase() : Super() {
	this->mClearanceBox = CreateDefaultSubobject<UFGClearanceComponent>(TEXT("Clearance"));
	this->mSnappedBuildingThickness = 0.0;
	this->mMidMeshLength = 0.0;
	this->mGenerateTunnelCollision = false;
	this->mCapMesh = nullptr;
	this->mMidMesh = nullptr;
	this->mEndCapRotation = FRotator::ZeroRotator;
	this->mMidMeshRotation = FRotator::ZeroRotator;
	this->mEndCapTranslation = FVector::ZeroVector;
	this->mClearanceHeightMin = 100.0;
	this->mClearanceThickness = 80.0;
	this->mCostSegmentLength = 400.0;
	this->mClearanceBox->SetupAttachment(RootComponent);
}
void AFGBuildablePassthroughBase::BeginPlay(){ }
void AFGBuildablePassthroughBase::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildablePassthroughBase, mSnappedBuildingThickness);
}
int32 AFGBuildablePassthroughBase::GetDismantleRefundReturnsMultiplier() const{ return int32(); }
bool AFGBuildablePassthroughBase::GetIsSoftClearance() const{ return bool(); }
void AFGBuildablePassthroughBase::GetIgnoredBuildablesForClearance(TArray< AFGBuildable* >& out_ignoredBuildables){ }
void AFGBuildablePassthroughBase::OverlapCheckFoundations(UWorld* world, const FVector& worldLocation, const FQuat& worldRotation, float thickness, TArray<class AFGBuildableFoundation*>& out_foundations) const{ }
