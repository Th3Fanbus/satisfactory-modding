// This file has been automatically generated by the Unreal Header Implementation tool

#include "Hologram/FGStandaloneSignHologram.h"
#include "Components/SceneComponent.h"
#include "Components/StaticMeshComponent.h"

AFGStandaloneSignHologram::AFGStandaloneSignHologram() : Super() {
	this->mDefaultSignSupportRecipe = nullptr;
	this->mChildSignPoleHologram = nullptr;
	this->mUprightIndicatorMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT("UprightIndicatorMesh"));
	this->mUseGradualFoundationRotations = true;
	this->mAttachmentPointSnapDistanceThreshold = 10000.0;
	this->mUprightIndicatorMesh->SetupAttachment(RootComponent);
}
void AFGStandaloneSignHologram::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGStandaloneSignHologram::BeginPlay(){ }
bool AFGStandaloneSignHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
bool AFGStandaloneSignHologram::DoMultiStepPlacement(bool isInputFromARelease){ return bool(); }
void AFGStandaloneSignHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
AActor* AFGStandaloneSignHologram::Construct(TArray< AActor* >& out_children, FNetConstructionID netConstructionID){ return nullptr; }
bool AFGStandaloneSignHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
void AFGStandaloneSignHologram::SpawnChildren(AActor* hologramOwner, FVector spawnLocation, APawn* hologramInstigator){ }
void AFGStandaloneSignHologram::Scroll(int32 delta){ }
void AFGStandaloneSignHologram::OnInvalidHitResult(){ }
void AFGStandaloneSignHologram::CheckValidFloor(){ }
