// This file has been automatically generated by the Unreal Header Implementation tool

#include "OnlineIntegrationSubsystem.h"

bool UOnlineIntegrationComponent::HasOnlineConnection(EOnlineIntegrationMappedContext Context) const{ return bool(); }
void UOnlineIntegrationComponent::Initialize(FSubsystemCollectionBase& Collection){ }
void UOnlineIntegrationComponent::Deinitialize(){ }
void UOnlineIntegrationComponent::OnOnlineContextCreated(){ }
const FOnlineContextCache* UOnlineIntegrationComponent::GetMappedContextCache(EOnlineIntegrationMappedContext Context) const{ return nullptr; }
FOnlineContextCache* UOnlineIntegrationComponent::GetMappedContextCache(EOnlineIntegrationMappedContext Context){ return nullptr; }
const FOnlineContextCache* UOnlineIntegrationComponent::GetUnmappedContextCache(EOnlineIntegrationUnmappedContext Context) const{ return nullptr; }
FOnlineContextCache* UOnlineIntegrationComponent::GetUnmappedContextCache(EOnlineIntegrationUnmappedContext Context){ return nullptr; }
EOnlineIntegrationUnmappedContext UOnlineIntegrationComponent::ResolveOnlineContext(EOnlineIntegrationMappedContext Context) const{ return EOnlineIntegrationUnmappedContext(); }
EOnlineIntegrationMode UOnlineIntegrationComponent::GetIntegrationMode() const{ return EOnlineIntegrationMode(); }
bool UOnlineIntegrationComponent::HasExternalServiceContext() const{ return bool(); }
const FGameplayTagContainer& UOnlineIntegrationComponent::GetTraitTags() const{ return *(new FGameplayTagContainer); }
bool UOnlineIntegrationComponent::HasTraitTag(const FGameplayTag& Tag) const{ return bool(); }
UOnlineIntegrationSubsystem* UOnlineIntegrationComponent::GetOnlineIntegration() const{ return nullptr; }
bool UOnlineIntegrationSubsystem::ShouldWaitForStartInput() const{ return bool(); }
UE::Online::EOnlineServices UOnlineIntegrationSubsystem::GetOnlineServicesProvider(EOnlineIntegrationUnmappedContext Context) const{ return UE::Online::EOnlineServices(); }
EOnlineIntegrationUnmappedContext UOnlineIntegrationSubsystem::GetServiceProviderContext(UE::Online::EOnlineServices ServiceProvider) const{ return EOnlineIntegrationUnmappedContext(); }
UE::Online::EOnlineServicesConnectionStatus UOnlineIntegrationSubsystem::GetConnectionStatus(EOnlineIntegrationMappedContext Context) const{ return UE::Online::EOnlineServicesConnectionStatus(); }
bool UOnlineIntegrationSubsystem::HasOnlineConnection(EOnlineIntegrationMappedContext Context) const{ return bool(); }
bool UOnlineIntegrationSubsystem::HasExternalServiceContext() const{ return bool(); }
const FGameplayTagContainer& UOnlineIntegrationSubsystem::GetTraitTags() const{ return *(new FGameplayTagContainer); }
UCommonUserSubsystem* UOnlineIntegrationSubsystem::GetUserManager() const{ return nullptr; }
UCommonSessionSubsystem* UOnlineIntegrationSubsystem::GetSessionManager() const{ return nullptr; }
const FOnlineContextCache* UOnlineIntegrationSubsystem::GetMappedContextCache(EOnlineIntegrationMappedContext Context) const{ return nullptr; }
FOnlineContextCache* UOnlineIntegrationSubsystem::GetMappedContextCache(EOnlineIntegrationMappedContext Context){ return nullptr; }
const FOnlineContextCache* UOnlineIntegrationSubsystem::GetUnmappedContextCache(EOnlineIntegrationUnmappedContext Context) const{ return nullptr; }
FOnlineContextCache* UOnlineIntegrationSubsystem::GetUnmappedContextCache(EOnlineIntegrationUnmappedContext Context){ return nullptr; }
bool UOnlineIntegrationSubsystem::HasInitializedBackend() const{ return bool(); }
bool UOnlineIntegrationSubsystem::CreateOnlineContexts(const FOnlineIntegrationPlatformSettings& Settings, FOnlineIntegrationInternalAccessKey&& AccessToken){ return bool(); }
EOnlineIntegrationUnmappedContext UOnlineIntegrationSubsystem::ResolveOnlineContext(EOnlineIntegrationMappedContext Context) const{ return EOnlineIntegrationUnmappedContext(); }
EOnlineIntegrationUnmappedContext UOnlineIntegrationSubsystem::GetComplementaryContext(EOnlineIntegrationUnmappedContext Context) const{ return EOnlineIntegrationUnmappedContext(); }
void UOnlineIntegrationSubsystem::ShutdownProcess(){ }
void UOnlineIntegrationSubsystem::RestartProcess(){ }
void UOnlineIntegrationSubsystem::Initialize(FSubsystemCollectionBase& Collection){ }
bool UOnlineIntegrationSubsystem::ShouldCreateSubsystem(UObject* Outer) const{ return bool(); }
void UOnlineIntegrationSubsystem::Deinitialize(){ }
