// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGLocomotive.h"

void AFGLocomotive::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
AFGLocomotive::AFGLocomotive(){ }
void AFGLocomotive::BeginPlay(){ }
void AFGLocomotive::Tick(float dt){ }
bool AFGLocomotive::DriverEnter( AFGCharacterPlayer* driver){ return bool(); }
bool AFGLocomotive::DriverLeave(bool keepDriving){ return bool(); }
void AFGLocomotive::AddInputBindings(UInputComponent* inputComponent){ }
void AFGLocomotive::UpdatePower(){ }
void AFGLocomotive::GainedSignificance_Implementation(){ }
EMultipleUnitControl AFGLocomotive::GetMultipleUnitRole() const{ return EMultipleUnitControl(); }
bool AFGLocomotive::CanSetTrainMultipleUnitMaster() const{ return bool(); }
bool AFGLocomotive::SetMultipleUnitControlMaster(bool force){ return bool(); }
void AFGLocomotive::ClearMultipleUnitControlMaster(){ }
void AFGLocomotive::DisplayDebug( UCanvas* canvas, const  FDebugDisplayInfo& debugDisplay, float& YL, float& YPos){ }
void AFGLocomotive::GiveHumanDriverControl(){ }
void AFGLocomotive::UpdateHeadlightsMode(){ }
bool AFGLocomotive::IsInputEnabled() const{ return bool(); }
void AFGLocomotive::Input_ThrottleAxis_Started(const FInputActionValue& actionValue){ }
void AFGLocomotive::Input_ThrottleAxis(const FInputActionValue& actionValue){ }
void AFGLocomotive::Input_SteerAxis(const FInputActionValue& actionValue){ }
void AFGLocomotive::Input_Handbrake(const FInputActionValue& actionValue){ }
void AFGLocomotive::Input_Honk(const FInputActionValue& actionValue){ }
void AFGLocomotive::Input_OpenLocomotiveMenu(const FInputActionValue& actionValue){ }
void AFGLocomotive::SetPowerConsumption(float pct){ }
void AFGLocomotive::SetPowerRegeneration(float pct){ }
void AFGLocomotive::OnHasPowerChanged(){ }
void AFGLocomotive::OnRep_HeadlightMode(){ }
FName AFGLocomotive::VehicleMovementComponentName = FName();
