// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGAmmoType.h"

void FAmmoTickFunction::ExecuteTick(float DeltaTime, ELevelTick TickType, ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent){ }
FString FAmmoTickFunction::DiagnosticMessage(){ return FString(); }
#if WITH_EDITOR
void UFGAmmoType::PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent){ Super::PostEditChangeProperty(PropertyChangedEvent); }
#endif 
UFGAmmoType::UFGAmmoType(){ }
bool UFGAmmoType::IsSupportedForNetworking() const{ return bool(); }
bool UFGAmmoType::CallRemoteFunction (UFunction* Function, void* Parms,  FOutParmRec* OutParms, FFrame* Stack){ return bool(); }
int32 UFGAmmoType::GetFunctionCallspace (UFunction* Function, FFrame* Stack){ return int32(); }
UWorld* UFGAmmoType::GetWorld() const{ return nullptr; }
bool UFGAmmoType::HasAuthority() const{ return bool(); }
void UFGAmmoType::InitializeAmmoType_Implementation(AFGWeapon* Weapon, bool Force){ }
void UFGAmmoType::OnAmmoTypeEjected_Implementation(){ }
void UFGAmmoType::OnWeaponStateChanged(EWeaponState oldState, EWeaponState newState){ }
void UFGAmmoType::OnBeginFire_Implementation(){ }
void UFGAmmoType::OnEndFire_Implementation(){ }
void UFGAmmoType::AmmoTick_Implementation(float DeltaSeconds){ }
void UFGAmmoType::SetAmmoInstigator(APawn* pawn){ }
void UFGAmmoType::SetFiringTransform(const FTransform& firingTransform){ }
void UFGAmmoType::SetFiringDirection(const FVector& firingDirection){ }
void UFGAmmoType::FireAmmunition_Implementation(){ }
void UFGAmmoType::FireSecondary_Implementation(){ }
USkeletalMesh* UFGAmmoType::GetMagazineMeshWithCustomMaterials(){ return nullptr; }
void UFGAmmoType::RegisterTickFunction(bool shouldRegister){ }
