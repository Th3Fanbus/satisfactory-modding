// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGJetPack.h"

AFGJetPack::AFGJetPack(){ }
void AFGJetPack::Tick(const float deltaTime){ }
bool AFGJetPack::ShouldSaveState() const{ return bool(); }
void AFGJetPack::DisableEquipment(){ }
void AFGJetPack::SetIsThrusting(const bool newIsThrusting){ }
float AFGJetPack::GetNewVelocityWhenThrusting(const float delta) const{ return float(); }
void AFGJetPack::JetPackThrust(){ }
void AFGJetPack::JetPackStopThrust(){ }
void AFGJetPack::GetSupportedConsumableTypes(TArray<TSubclassOf< UFGItemDescriptor >>& out_itemDescriptors) const{ }
int AFGJetPack::GetSelectedConsumableTypeIndex() const{ return int(); }
void AFGJetPack::SetSelectedConsumableTypeIndex(const int selectedIndex){ }
void AFGJetPack::AddEquipmentActionBindings(){ }
void AFGJetPack::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGJetPack::ConsumeFuel(const float delta){ }
void AFGJetPack::RegenerateFuel(const float delta){ }
void AFGJetPack::Equip( AFGCharacterPlayer* character){ }
void AFGJetPack::UnEquip(){ }
bool AFGJetPack::CanThrust() const{ return bool(); }
void AFGJetPack::MakeActiveNoise(){ }
bool AFGJetPack::CheckCurrentAvailableFuel(){ return bool(); }
void AFGJetPackAttachment::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGJetPackAttachment::OnRep_IsThrusting(){ }
void AFGJetPackAttachment::SetIsThrusting(const bool newIsThrusting){ }
