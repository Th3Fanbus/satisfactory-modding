// This file has been automatically generated by the Unreal Header Implementation tool

#include "Equipment/FGChainsaw.h"

AFGChainsaw::AFGChainsaw(){ }
void AFGChainsaw::Tick(float dt){ }
bool AFGChainsaw::ShouldSaveState() const{ return bool(); }
void AFGChainsaw::DisableEquipment(){ }
void AFGChainsaw::Equip(AFGCharacterPlayer* character){ }
void AFGChainsaw::UnEquip(){ }
void AFGChainsaw::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
bool AFGChainsaw::IsSawEngaged() const{ return bool(); }
bool AFGChainsaw::IsSawing() const{ return bool(); }
bool AFGChainsaw::IsSpinningUp() const{ return bool(); }
bool AFGChainsaw::DoesPlayerHaveChainsawEquipped( AFGCharacterPlayer* player){ return bool(); }
void AFGChainsaw::HandleDefaultEquipmentActionEvent(EDefaultEquipmentAction action, EDefaultEquipmentActionEvent actionEvent){ }
bool AFGChainsaw::IsSpinningUpTransitionFinished_Implementation() const{ return bool(); }
void AFGChainsaw::OnChainsawStateTransition_Implementation(EFGChainsawState oldState){ }
bool AFGChainsaw::ConsumeFuel(float dt){ return bool(); }
void AFGChainsaw::StartSawing(){ }
void AFGChainsaw::Server_StartSawing_Implementation(){ }
bool AFGChainsaw::Server_StartSawing_Validate(){ return bool(); }
void AFGChainsaw::StopSawing(){ }
void AFGChainsaw::Server_RemoveFoliageInstance_Implementation(const  FFoliageInstanceStableId& stableId, const FVector& effectLocation, const FTransform& instanceTransform){ }
void AFGChainsaw::RemoveFoliageInstance(const  FFoliageInstanceStableId& stableId, const FVector& effectLocation, const FTransform& instanceTransform){ }
void AFGChainsaw::Server_RemoveChainsawableObject_Implementation(const TScriptInterface<IFGChainsawableInterface> &chainsawableObject){ }
void AFGChainsaw::RemoveChainsawableObject(TScriptInterface<IFGChainsawableInterface> chainsawableObject){ }
void AFGChainsaw::RemoveCollateralFoliage( AFGFoliageRemovalSubsystem* removalSubsystem, const FVector& location){ }
void AFGChainsaw::BroadcastPickup_Implementation(const TArray<FPickedUpInstance>& pickups,  AFGFoliagePickup* instigatorPlayer){ }
void AFGChainsaw::Server_StopSawing_Implementation(){ }
bool AFGChainsaw::Server_StopSawing_Validate(){ return bool(); }
bool AFGChainsaw::HasAnyFuel() const{ return bool(); }
void AFGChainsaw::StartNewSawing( USceneComponent* sawingComponent, int32 newIndex){ }
bool AFGChainsaw::IsValidSawing( USceneComponent* sawingComponent, int32 newIndex) const{ return bool(); }
bool AFGChainsaw::CanPlayerPickupFoliageResourceForSeeds( UHierarchicalInstancedStaticMeshComponent* meshComponent, bool excludeChainsawable, TArrayView< uint32 > seeds, TArray<FInventoryStack>& out_validStacks){ return bool(); }
UStaticMesh* AFGChainsaw::GetStaticMesh(USceneComponent* sawingComponent){ return nullptr; }
bool AFGChainsaw::IsChainsawableObject(UObject* object) const{ return bool(); }
void AFGChainsaw::TransitionToNewState(EFGChainsawState newState){ }
void AFGChainsaw::Server_TransitionToNewState_Implementation(EFGChainsawState newState){ }
void AFGChainsaw::OnRep_ChainsawState(EFGChainsawState oldState){ }
