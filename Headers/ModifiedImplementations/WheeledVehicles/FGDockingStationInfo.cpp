// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGDockingStationInfo.h"

AFGDockingStationInfo::AFGDockingStationInfo(){ }
void AFGDockingStationInfo::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const{ }
void AFGDockingStationInfo::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
bool AFGDockingStationInfo::AddAsRepresentation(){ return bool(); }
bool AFGDockingStationInfo::UpdateRepresentation(){ return bool(); }
bool AFGDockingStationInfo::RemoveAsRepresentation(){ return bool(); }
bool AFGDockingStationInfo::IsActorStatic(){ return bool(); }
FVector AFGDockingStationInfo::GetRealActorLocation(){ return FVector(); }
FRotator AFGDockingStationInfo::GetRealActorRotation(){ return FRotator(); }
UTexture2D* AFGDockingStationInfo::GetActorRepresentationTexture(){ return nullptr; }
FText AFGDockingStationInfo::GetActorRepresentationText(){ return FText(); }
void AFGDockingStationInfo::SetActorRepresentationText(const FText& newText){ }
FLinearColor AFGDockingStationInfo::GetActorRepresentationColor(){ return FLinearColor(); }
void AFGDockingStationInfo::SetActorRepresentationColor(FLinearColor newColor){ }
ERepresentationType AFGDockingStationInfo::GetActorRepresentationType(){ return ERepresentationType(); }
bool AFGDockingStationInfo::GetActorShouldShowInCompass(){ return bool(); }
bool AFGDockingStationInfo::GetActorShouldShowOnMap(){ return bool(); }
EFogOfWarRevealType AFGDockingStationInfo::GetActorFogOfWarRevealType(){ return EFogOfWarRevealType(); }
float AFGDockingStationInfo::GetActorFogOfWarRevealRadius(){ return float(); }
ECompassViewDistance AFGDockingStationInfo::GetActorCompassViewDistance(){ return ECompassViewDistance(); }
void AFGDockingStationInfo::SetActorCompassViewDistance(ECompassViewDistance compassViewDistance){ }
void AFGDockingStationInfo::BeginPlay(){ }
void AFGDockingStationInfo::EndPlay(const EEndPlayReason::Type EndPlayReason){ }
void AFGDockingStationInfo::Init( AFGBuildableDockingStation* station){ }
void AFGDockingStationInfo::SetStationStatus(EDockingStationStatus status){ }
void AFGDockingStationInfo::OnRep_Status(){ }
